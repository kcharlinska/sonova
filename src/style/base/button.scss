/*
Button

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn-block - Set full width of a parent element
.btn-disable - Set button state to disabled and reset pseudo-classes style

Markup:
a(class="btn {{modifier_class}}") Anchor element

Style guide: Components.Button
*/

.btn {
	display: inline-block;
	position: relative;
	box-sizing: border-box;
	padding: 14px 6px;
	transition: background-color $time-transition, color $time-transition, border-color $time-transition, transform $time-transition;
	border: 0;
	border-radius: 5px;
	background-color: color('primary');
	color: color('white');
	font-size: 14px;
	letter-spacing: 0.4px;
	text-align: center;
	cursor: pointer;
	user-select: none;
	-webkit-user-drag: none;

	// Icon inside
	.icon {
		transition: transform $time-transition;
	}

	&:active {
		transform: translateY(1px);
	}

	&-block {
		display: block;
		width: 100% !important;
		max-width: 100% !important;
	}

	&-disable,
	&[disabled] {
		transform: none !important;
		cursor: not-allowed;

		&:before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			border-radius: inherit;
			opacity: 0.6;
			background: color('black');
			pointer-events: none;
		}
	}

	@include hover {
		background-color: darken(color('primary'), 0.95);
	}
}

/*
Colors

.btn--primary - color
.btn--secondary - color
.btn--success - color
.btn--danger - color
.btn--warning - color
.btn--info - color
.btn--light - color
.btn--dark - color

Markup:
a(class="btn {{modifier_class}}") Anchor element

Style guide: Components.Button.colors
*/

.btn {
	&--primary {
		background-color: color('primary');

		@include hover {
			background-color: darken(color('primary'), 0.8);
		}
	}

	// &--secondary {
	//   background-color: color('secondary');
	// }

	// &--success {
	//   background-color: color('success');
	// }

	// &--danger {
	//   background-color: color('danger');
	// }

	// &--warning {
	//   background-color: color('warning');
	// }

	// &--info {
	//   background-color: color('info');
	// }
}

/*
Size

.btn--large - size
.btn--wide - size
.btn--big - size
.btn--medium - size
.btn--small - size
.btn--tiny - size

Markup:
a(class="btn {{modifier_class}}") Anchor element

Style guide: Components.Button.size
*/

.btn {
	// &--large {
	//   padding: 30px 50px;
	// }

	// &--wide {
	//   padding-right: 60px;
	//   padding-left: 60px;
	// }

	// &--big {
	//   padding: 30px 45px;
	// }

	// &--medium {
	//   padding: 20px 20px;
	// }

	// &--small {
	//   padding: 15px 20px;
	// }

	// &--tiny {
	//   padding: 14px 12px;
	// }
}
